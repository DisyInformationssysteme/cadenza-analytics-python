name: Branch off Cadenza Version

on:
  workflow_dispatch:
    inputs:
      cadenza-version:
        type: string
        required: true
        description: |
          Next Cadenza Main Version
          (e.g. '10.4' for setting the main branch up for development against Cadenza 10.4. This would make 10.4.0-dev the new main branch version.)


jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Validate version input
      if: "${{ github.event.inputs.cadenza-version != '' }}"
      run: |
        if ! [[ '${{ github.event.inputs.cadenza-version }}' =~ ^[0-9]+\.[0-9]+$ ]]; then
          echo "Cadenza Version must be specified in the format x.x (e.g. 10.4). Was '${{ github.event.inputs.cadenza-version }}'." >&2
          exit 1
        fi

    - uses: actions/create-github-app-token@v1
      id: app-token
      with:
        app-id: ${{ vars.DISY_RELEASE_APP_ID }}
        private-key: ${{ secrets.DISY_RELEASE_APP_SECRET }}

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ steps.app-token.outputs.token }}

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ vars.PYTHON_VERSION }}

    # poetry is needed for building and for poetry-bumpversion for version management
    - name: Install poetry
      run: |
        pipx install poetry
        poetry self add poetry-bumpversion

    
    # Needed for creating the tag
    - name: Configure Git
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"

    - name: Determine branch name
      run: echo "BRANCH_NAME=v$(poetry version patch --dry-run -s | cut -d. -f1,2).x" >> $GITHUB_ENV

    - name: Create branch for current version
      run: git branch ${{ env.BRANCH_NAME }} main

    - name: Bump package version of main
      run: | 
        poetry version ${{ github.event.inputs.cadenza-version }}.0-dev
        echo "NEW_VERSION=$(poetry version -s)" >> $GITHUB_ENV

    - name: Commit and tag changes
      run: |
        git add "pyproject.toml"
        git commit -m "chore: branch off main as ${{ env.BRANCH_NAME }} and bump main version to ${{ env.NEW_VERSION }}"

    - name: Push changes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: git push -u origin ${{ env.BRANCH_NAME }} && git push origin && git push --tags
